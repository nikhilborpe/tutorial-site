[1mdiff --git a/pom.xml b/pom.xml[m
[1mindex c73439d..c635eb2 100644[m
[1m--- a/pom.xml[m
[1m+++ b/pom.xml[m
[36m@@ -35,6 +35,28 @@[m
 			<artifactId>spring-boot-starter-data-jpa</artifactId>[m
 		</dependency>[m
 [m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>com.h2database</groupId>[m
[32m+[m			[32m<artifactId>h2</artifactId>[m
[32m+[m			[32m<scope>runtime</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<!-- https://mvnrepository.com/artifact/junit/junit -->[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>junit</groupId>[m
[32m+[m			[32m<artifactId>junit</artifactId>[m
[32m+[m			[32m<!--version>4.12</version-->[m
[32m+[m			[32m<scope>test</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m
[32m+[m		[32m<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->[m
[32m+[m		[32m<dependency>[m
[32m+[m			[32m<groupId>org.projectlombok</groupId>[m
[32m+[m			[32m<artifactId>lombok</artifactId>[m
[32m+[m			[32m<version>1.18.10</version>[m
[32m+[m			[32m<scope>provided</scope>[m
[32m+[m		[32m</dependency>[m
[32m+[m
 [m
 		<dependency>[m
 			<groupId>org.springframework.boot</groupId>[m
[1mdiff --git a/src/main/java/com/tutorial/site/TutorialSiteApplication.java b/src/main/java/com/tutorial/site/TutorialSiteApplication.java[m
[1mindex fa22736..9c40fcd 100644[m
[1m--- a/src/main/java/com/tutorial/site/TutorialSiteApplication.java[m
[1m+++ b/src/main/java/com/tutorial/site/TutorialSiteApplication.java[m
[36m@@ -2,8 +2,10 @@[m [mpackage com.tutorial.site;[m
 [m
 import org.springframework.boot.SpringApplication;[m
 import org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m[32mimport org.springframework.cache.annotation.EnableCaching;[m
 [m
 @SpringBootApplication[m
[32m+[m[32m@EnableCaching[m
 public class TutorialSiteApplication {[m
 [m
 	public static void main(String[] args) {[m
[1mdiff --git a/src/main/java/com/tutorial/site/controller/UserController.java b/src/main/java/com/tutorial/site/controller/UserController.java[m
[1mindex 0ebc632..05bacb7 100644[m
[1m--- a/src/main/java/com/tutorial/site/controller/UserController.java[m
[1m+++ b/src/main/java/com/tutorial/site/controller/UserController.java[m
[36m@@ -18,4 +18,6 @@[m [mpublic class UserController {[m
     public Iterable<User> getUsers(){[m
         return userService.getAllUsers();[m
     }[m
[32m+[m
[32m+[m
 }[m
[1mdiff --git a/src/main/java/com/tutorial/site/domain/Role.java b/src/main/java/com/tutorial/site/domain/Role.java[m
[1mindex 343d867..e4a57f1 100644[m
[1m--- a/src/main/java/com/tutorial/site/domain/Role.java[m
[1m+++ b/src/main/java/com/tutorial/site/domain/Role.java[m
[36m@@ -1,6 +1,14 @@[m
 package com.tutorial.site.domain;[m
 [m
[32m+[m[32mimport javax.persistence.Entity;[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m
[32m+[m[32mimport javax.persistence.Id;[m
[32m+[m
[32m+[m[32m@Entity[m
 public class Role {[m
[32m+[m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue[m
     private Long id;[m
     private String name;[m
 [m
[1mdiff --git a/src/main/java/com/tutorial/site/domain/User.java b/src/main/java/com/tutorial/site/domain/User.java[m
[1mindex 30f34c1..da4c0c9 100644[m
[1m--- a/src/main/java/com/tutorial/site/domain/User.java[m
[1m+++ b/src/main/java/com/tutorial/site/domain/User.java[m
[36m@@ -1,9 +1,23 @@[m
 package com.tutorial.site.domain;[m
 [m
[32m+[m[32mimport lombok.Builder;[m
[32m+[m[32mimport lombok.NoArgsConstructor;[m
[32m+[m[32mimport lombok.RequiredArgsConstructor;[m
[32m+[m
[32m+[m[32mimport javax.persistence.Entity;[m
[32m+[m[32mimport javax.persistence.GeneratedValue;[m
[32m+[m[32mimport javax.persistence.Id;[m
[32m+[m[32mimport javax.persistence.OneToMany;[m
[32m+[m[32mimport java.util.List;[m
 import java.util.Objects;[m
 [m
[32m+[m
[32m+[m[32m@Entity[m
[32m+[m[32m@RequiredArgsConstructor[m
 public class User {[m
 [m
[32m+[m[32m    @Id[m
[32m+[m[32m    @GeneratedValue[m
     private Long id;[m
     private String firstName;[m
     private String middleName;[m
[36m@@ -12,28 +26,8 @@[m [mpublic class User {[m
     private String userName;[m
     private String password;[m
 [m
[31m-    private Role role;[m
[31m-[m
[31m-    @Override[m
[31m-    public boolean equals(Object o) {[m
[31m-        if (this == o) return true;[m
[31m-        if (o == null || getClass() != o.getClass()) return false;[m
[31m-        User user = (User) o;[m
[31m-        return id == user.id &&[m
[31m-                Objects.equals(firstName, user.firstName) &&[m
[31m-                Objects.equals(middleName, user.middleName) &&[m
[31m-                Objects.equals(lastName, user.lastName) &&[m
[31m-                userName.equals(user.userName) &&[m
[31m-                password.equals(user.password) &&[m
[31m-                Objects.equals(role, user.role);[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    @Override[m
[31m-    public int hashCode() {[m
[31m-        return Objects.hash(id, firstName, middleName, lastName, userName, password, role);[m
[31m-    }[m
[31m-[m
[32m+[m[32m    @OneToMany[m
[32m+[m[32m    private List<Role> roles;[m
 [m
     public Long getId() {[m
         return id;[m
[36m@@ -43,7 +37,6 @@[m [mpublic class User {[m
         this.id = id;[m
     }[m
 [m
[31m-[m
     public String getFirstName() {[m
         return firstName;[m
     }[m
[36m@@ -76,11 +69,11 @@[m [mpublic class User {[m
         this.userName = userName;[m
     }[m
 [m
[31m-    public Role getRole() {[m
[31m-        return role;[m
[32m+[m[32m    public List<Role> getRoles() {[m
[32m+[m[32m        return roles;[m
     }[m
 [m
[31m-    public void setRole(Role role) {[m
[31m-        this.role = role;[m
[32m+[m[32m    public void setRole(List<Role> roles) {[m
[32m+[m[32m        this.roles = roles;[m
     }[m
 }[m
[1mdiff --git a/src/main/java/com/tutorial/site/service/UserServiceImpl.java b/src/main/java/com/tutorial/site/service/UserServiceImpl.java[m
[1mindex 12962d2..f55d7a4 100644[m
[1m--- a/src/main/java/com/tutorial/site/service/UserServiceImpl.java[m
[1m+++ b/src/main/java/com/tutorial/site/service/UserServiceImpl.java[m
[36m@@ -3,6 +3,7 @@[m [mpackage com.tutorial.site.service;[m
 import com.tutorial.site.domain.User;[m
 import com.tutorial.site.repository.UserRepository;[m
 import org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.cache.annotation.Cacheable;[m
 import org.springframework.stereotype.Service;[m
 [m
 @Service[m
[36m@@ -12,6 +13,7 @@[m [mpublic class UserServiceImpl implements UserService {[m
     private UserRepository userRepository;[m
 [m
     @Override[m
[32m+[m[32m    @Cacheable("users")[m
     public Iterable<User> getAllUsers() {[m
         return userRepository.findAll();[m
     }[m
[1mdiff --git a/src/main/resources/application.properties b/src/main/resources/application.properties[m
[1mindex 8b13789..2eadd30 100644[m
[1m--- a/src/main/resources/application.properties[m
[1m+++ b/src/main/resources/application.properties[m
[36m@@ -1 +1,10 @@[m
[31m-[m
[32m+[m[32mspring.datasource.url=jdbc:h2:mem:testdb[m
[32m+[m[32mspring.datasource.driverClassName=org.h2.Driver[m
[32m+[m[32mspring.datasource.username=sa[m
[32m+[m[32mspring.datasource.password=test[m
[32m+[m[32mspring.jpa.database-platform=org.hibernate.dialect.H2Dialect[m
[32m+[m[32mspring.h2.console.settings.trace=true[m
[32m+[m[32m# Whether to enable remote access.[m
[32m+[m[32mspring.h2.console.settings.web-allow-others=false[m
[32m+[m[32mspring.h2.console.enabled=true[m
[32m+[m[32mspring.h2.console.path=/h2-console[m
\ No newline at end of file[m
[1mdiff --git a/src/test/java/com/tutorial/site/controller/UserControllerTest.java b/src/test/java/com/tutorial/site/controller/UserControllerTest.java[m
[1mindex 552830e..aa34116 100644[m
[1m--- a/src/test/java/com/tutorial/site/controller/UserControllerTest.java[m
[1m+++ b/src/test/java/com/tutorial/site/controller/UserControllerTest.java[m
[36m@@ -1,4 +1,26 @@[m
 package com.tutorial.site.controller;[m
 [m
[32m+[m
[32m+[m[32mimport org.junit.runner.RunWith;[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;[m
[32m+[m[32mimport org.springframework.http.MediaType;[m
[32m+[m[32mimport org.springframework.mock.web.MockHttpServletResponse;[m
[32m+[m[32mimport org.springframework.test.context.junit4.SpringRunner;[m
[32m+[m[32mimport org.springframework.test.web.servlet.MockMvc;[m
[32m+[m[32mimport org.springframework.test.web.servlet.MvcResult;[m
[32m+[m
[32m+[m[32mimport static  org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;[m
[32m+[m
[32m+[m[32m@RunWith(SpringRunner.class)[m
[32m+[m[32m@WebMvcTest[m
 public class UserControllerTest {[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    MockMvc mockMvc;[m
[32m+[m
[32m+[m[32m    public void testGetAllUsers() throws Exception{[m
[32m+[m[32m        MockHttpServletResponse result = mockMvc.perform(get("/users").accept(MediaType.APPLICATION_JSON)).andReturn().getResponse();[m
[32m+[m[32m        result.getContentAsString();[m
[32m+[m[32m    }[m
 }[m
[1mdiff --git a/src/test/java/com/tutorial/site/service/UserServiceTest.java b/src/test/java/com/tutorial/site/service/UserServiceTest.java[m
[1mindex 04f4dc0..034b43b 100644[m
[1m--- a/src/test/java/com/tutorial/site/service/UserServiceTest.java[m
[1m+++ b/src/test/java/com/tutorial/site/service/UserServiceTest.java[m
[36m@@ -1,4 +1,49 @@[m
[31m-package com.tutorial.site;[m
[32m+[m[32mpackage com.tutorial.site.service;[m
 [m
[32m+[m[32mimport com.tutorial.site.TutorialSiteApplication;[m
[32m+[m[32mimport com.tutorial.site.domain.User;[m
[32m+[m[32mimport com.tutorial.site.repository.UserRepository;[m
[32m+[m[32mimport org.h2.engine.UserBuilder;[m
[32m+[m[32mimport org.junit.Before;[m
[32m+[m[32mimport org.junit.Test;[m
[32m+[m[32mimport org.junit.runner.RunWith;[m
[32m+[m[32mimport org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32mimport org.springframework.test.context.ContextConfiguration;[m
[32m+[m[32mimport org.springframework.test.context.junit4.SpringRunner;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m
[32m+[m[32mimport static org.junit.Assert.*;[m
[32m+[m
[32m+[m[32m@RunWith(SpringRunner.class)[m
[32m+[m[32m@ContextConfiguration(classes = {TutorialSiteApplication.class})[m
 public class UserServiceTest {[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    private UserRepository userRepository;[m
[32m+[m
[32m+[m[32m    @Autowired[m
[32m+[m[32m    UserService userService;[m
[32m+[m
[32m+[m[32m    @Before[m
[32m+[m[32m    public void setUp() {[m
[32m+[m[32m        for (int i = 0; i < 3; i++) {[m
[32m+[m[32m            User user=new User();[m
[32m+[m[32m            user.setUserName("nborpe"+i);[m
[32m+[m[32m            user.setFirstName("Nikhil"+i);[m
[32m+[m[32m            user.setMiddleName("BhagawanRao"+i);[m
[32m+[m[32m            user.setLastName("Borpe"+i);[m
[32m+[m[32m            userRepository.save(user);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    public void testUserService() {[m
[32m+[m[32m        Iterable<User> list = userService.getAllUsers();[m
[32m+[m[32m        List<User> users=new ArrayList<>();[m
[32m+[m[32m        list.forEach(item->users.add(item));[m
[32m+[m[32m        assertEquals(users.size(),3);[m
[32m+[m[32m    }[m
[32m+[m
 }[m
